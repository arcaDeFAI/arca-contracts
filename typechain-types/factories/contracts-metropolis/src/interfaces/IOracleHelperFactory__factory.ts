/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IOracleHelperFactory,
  IOracleHelperFactoryInterface,
} from "../../../../contracts-metropolis/src/interfaces/IOracleHelperFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "contract ILBPair",
        name: "pair",
        type: "address",
      },
      {
        internalType: "contract IAggregatorV3",
        name: "dataFeedX",
        type: "address",
      },
      {
        internalType: "contract IAggregatorV3",
        name: "dataFeedY",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "decimalsX",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "decimalsY",
        type: "uint8",
      },
    ],
    name: "createOracleHelper",
    outputs: [
      {
        internalType: "contract IOracleHelper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IOracleHelperFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IOracleHelperFactoryInterface {
    return new Interface(_abi) as IOracleHelperFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IOracleHelperFactory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IOracleHelperFactory;
  }
}
