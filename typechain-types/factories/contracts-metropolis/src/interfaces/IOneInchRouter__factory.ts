/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IOneInchRouter,
  IOneInchRouterInterface,
} from "../../../../contracts-metropolis/src/interfaces/IOneInchRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "executor",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IERC20Upgradeable",
            name: "srcToken",
            type: "address",
          },
          {
            internalType: "contract IERC20Upgradeable",
            name: "dstToken",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "srcReceiver",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "dstReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minReturnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flags",
            type: "uint256",
          },
        ],
        internalType: "struct IOneInchRouter.SwapDescription",
        name: "desc",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "permit",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "spentAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IOneInchRouter__factory {
  static readonly abi = _abi;
  static createInterface(): IOneInchRouterInterface {
    return new Interface(_abi) as IOneInchRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IOneInchRouter {
    return new Contract(address, _abi, runner) as unknown as IOneInchRouter;
  }
}
