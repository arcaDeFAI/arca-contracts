/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockOracleHelper,
  MockOracleHelperInterface,
} from "../../../test/mocks/MockOracleHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "OracleHelper__AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "OracleHelper__InvalidVault",
    type: "error",
  },
  {
    inputs: [],
    name: "OracleHelper__NotFactory",
    type: "error",
  },
  {
    inputs: [],
    name: "OracleHelper__NotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "checkPriceInDeviation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDataFeedX",
    outputs: [
      {
        internalType: "contract IAggregatorV3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDataFeedY",
    outputs: [
      {
        internalType: "contract IAggregatorV3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOracleParameters",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPrice",
            type: "uint256",
          },
          {
            internalType: "uint24",
            name: "heartbeatX",
            type: "uint24",
          },
          {
            internalType: "uint24",
            name: "heartbeatY",
            type: "uint24",
          },
          {
            internalType: "uint256",
            name: "deviationThreshold",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "twapPriceCheckEnabled",
            type: "bool",
          },
          {
            internalType: "uint40",
            name: "twapInterval",
            type: "uint40",
          },
        ],
        internalType: "struct IOracleHelper.OracleParameters",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSequencerUptimeFeed",
    outputs: [
      {
        internalType: "contract IAggregatorV3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountY",
        type: "uint256",
      },
    ],
    name: "getValueInY",
    outputs: [
      {
        internalType: "uint256",
        name: "valueInY",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "heartbeatX",
        type: "uint24",
      },
      {
        internalType: "uint24",
        name: "heartbeatY",
        type: "uint24",
      },
      {
        internalType: "uint256",
        name: "minPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPrice",
        type: "uint256",
      },
      {
        internalType: "contract IAggregatorV3",
        name: "sequencerUptimeFeed",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAggregatorV3",
        name: "dataFeedX",
        type: "address",
      },
      {
        internalType: "contract IAggregatorV3",
        name: "dataFeedY",
        type: "address",
      },
    ],
    name: "setDataFeeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPrice",
            type: "uint256",
          },
          {
            internalType: "uint24",
            name: "heartbeatX",
            type: "uint24",
          },
          {
            internalType: "uint24",
            name: "heartbeatY",
            type: "uint24",
          },
          {
            internalType: "uint256",
            name: "deviationThreshold",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "twapPriceCheckEnabled",
            type: "bool",
          },
          {
            internalType: "uint40",
            name: "twapInterval",
            type: "uint40",
          },
        ],
        internalType: "struct IOracleHelper.OracleParameters",
        name: "parameters",
        type: "tuple",
      },
    ],
    name: "setOracleParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "inDeviation",
        type: "bool",
      },
    ],
    name: "setPriceInDeviation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAggregatorV3",
        name: "sequencerUptimeFeed",
        type: "address",
      },
    ],
    name: "setSequencerUptimeFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "decimalsX",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "decimalsY",
        type: "uint8",
      },
    ],
    name: "setTokenDecimals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
      {
        internalType: "uint40",
        name: "interval",
        type: "uint40",
      },
      {
        internalType: "uint256",
        name: "deviationThreshold",
        type: "uint256",
      },
    ],
    name: "setTwapParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526002805460ff19166001179055600a805461030960a11b61ffff60a01b19909116179055348015603357600080fd5b50604051610ad8380380610ad88339810160408190526050916057565b600155606f565b600060208284031215606857600080fd5b5051919050565b610a5a8061007e6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638995bc60116100a2578063a056076c11610071578063a056076c14610396578063b8f44963146103a7578063c16822a4146103d7578063c9eb34bb146103ea578063ff2316c3146103f257600080fd5b80638995bc60146103235780638d928af81461036557806391b7f5ed1461037b57806398d5fdca1461038e57600080fd5b806355182894116100de57806355182894146101d7578063569f8ef9146102de5780635efb8b95146102ef57806365d1a3771461030257600080fd5b80633417af111461011057806335c22e581461015a578063392e53cd146101965780634c6af609146101b2575b600080fd5b61015861011e3660046105f8565b6007805464ffffffffff9093166101000265ffffffffff00199415159490941665ffffffffffff1990931692909217929092179055600655565b005b61015861016836600461064e565b600980546001600160a01b039384166001600160a01b031991821617909155600a8054929093169116179055565b60005460ff165b60405190151581526020015b60405180910390f35b600a546001600160a01b03165b6040516001600160a01b0390911681526020016101a9565b6102756040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152506040805160e0810182526003548152600454602082015260055462ffffff80821693830193909352630100000090049091166060820152600654608082015260075460ff8116151560a0830152610100900464ffffffffff1660c082015290565b6040516101a99190600060e082019050825182526020830151602083015262ffffff604084015116604083015262ffffff60608401511660608301526080830151608083015260a0830151151560a083015264ffffffffff60c08401511660c083015292915050565b6009546001600160a01b03166101bf565b6101586102fd366004610698565b610413565b610315610310366004610708565b6104fe565b6040519081526020016101a9565b61015861033136600461074a565b600a805461ffff60a01b1916600160a01b60ff9485160260ff60a81b191617600160a81b9290931691909102919091179055565b60005461010090046001600160a01b03166101bf565b61015861038936600461077d565b600155565b610315610546565b6008546001600160a01b03166101bf565b6101586103b5366004610796565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6101586103e53660046107ba565b610571565b61019d6105a6565b6101586104003660046107d5565b6002805460ff1916911515919091179055565b60005460ff16156104375760405163756a0afb60e01b815260040160405180910390fd5b60008054600880546001600160a01b039485166001600160a01b03199091161790556040805160e0810182528681526020810186905262ffffff98891691810182905296909716606087018190526101f46080880181905260a0880184905260c090970183905260039590955560049390935560058054630100000090950265ffffffffffff19958616909717969096179095556006939093556007805490921690915560ff199190931661010002166001600160a81b0319909216919091176001179055565b600080600a60149054906101000a900460ff16600a61051d91906108f1565b6105278686610900565b6105319190610917565b905061053d8382610939565b95945050505050565b6000805460ff1661056a5760405163208e340360e01b815260040160405180910390fd5b5060015490565b60005460ff166105945760405163208e340360e01b815260040160405180910390fd5b8060036105a18282610966565b505050565b6000805460ff166105ca5760405163208e340360e01b815260040160405180910390fd5b5060025460ff1690565b80151581146105e257600080fd5b50565b64ffffffffff811681146105e257600080fd5b60008060006060848603121561060d57600080fd5b8335610618816105d4565b92506020840135610628816105e5565b929592945050506040919091013590565b6001600160a01b03811681146105e257600080fd5b6000806040838503121561066157600080fd5b823561066c81610639565b9150602083013561067c81610639565b809150509250929050565b62ffffff811681146105e257600080fd5b60008060008060008060c087890312156106b157600080fd5b86356106bc81610639565b955060208701356106cc81610687565b945060408701356106dc81610687565b9350606087013592506080870135915060a08701356106fa81610639565b809150509295509295509295565b60008060006060848603121561071d57600080fd5b505081359360208301359350604090920135919050565b803560ff8116811461074557600080fd5b919050565b6000806040838503121561075d57600080fd5b61076683610734565b915061077460208401610734565b90509250929050565b60006020828403121561078f57600080fd5b5035919050565b6000602082840312156107a857600080fd5b81356107b381610639565b9392505050565b600060e08284031280156107cd57600080fd5b509092915050565b6000602082840312156107e757600080fd5b81356107b3816105d4565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561084357808504811115610827576108276107f2565b600184161561083557908102905b60019390931c92800261080c565b935093915050565b60008261085a575060016108eb565b81610867575060006108eb565b816001811461087d5760028114610887576108a3565b60019150506108eb565b60ff841115610898576108986107f2565b50506001821b6108eb565b5060208310610133831016604e8410600b84101617156108c6575081810a6108eb565b6108d36000198484610808565b80600019048211156108e7576108e76107f2565b0290505b92915050565b60006107b360ff84168361084b565b80820281158282048414176108eb576108eb6107f2565b60008261093457634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156108eb576108eb6107f2565b600081356108eb816105d4565b600081356108eb816105e5565b813581556020820135600182015560028101604083013561098681610687565b62ffffff811662ffffff1983541617825550600060608401356109a881610687565b825465ffffff000000191660189190911b65ffffff00000016179091555060808201356003820155600481016109f76109e360a0850161094c565b825490151560ff1660ff1991909116178255565b6105a1610a0660c08501610959565b825465ffffffffff00191660089190911b65ffffffffff001617825556fea264697066735822122000893acd9516dd4d56ecca1279e73166247e0ea03c907413b853dfbfddd8020964736f6c634300081a0033";

type MockOracleHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockOracleHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockOracleHelper__factory extends ContractFactory {
  constructor(...args: MockOracleHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialPrice: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialPrice, overrides || {});
  }
  override deploy(
    initialPrice: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialPrice, overrides || {}) as Promise<
      MockOracleHelper & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockOracleHelper__factory {
    return super.connect(runner) as MockOracleHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockOracleHelperInterface {
    return new Interface(_abi) as MockOracleHelperInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockOracleHelper {
    return new Contract(address, _abi, runner) as unknown as MockOracleHelper;
  }
}
