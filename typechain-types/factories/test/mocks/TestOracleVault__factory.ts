/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TestOracleVault,
  TestOracleVaultInterface,
} from "../../../test/mocks/TestOracleVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleHelper",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getOracleHelper",
    outputs: [
      {
        internalType: "contract IOracleHelper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountY",
        type: "uint256",
      },
    ],
    name: "previewShares",
    outputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "effectiveX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "effectiveY",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalBalanceX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalBalanceY",
        type: "uint256",
      },
    ],
    name: "setTotalBalances",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
    ],
    name: "setTotalSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506040516105a53803806105a5833981016040819052602c916050565b600080546001600160a01b0319166001600160a01b0392909216919091179055607e565b600060208284031215606157600080fd5b81516001600160a01b0381168114607757600080fd5b9392505050565b6105188061008d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632baf57d314610067578063534947ae146100875780638b413d16146100b55780638d8d0d75146100d0578063c4e41b22146100eb578063f7ea7a3d146100fc575b600080fd5b600254600354604080519283526020830191909152015b60405180910390f35b61009a610095366004610418565b61010f565b6040805193845260208401929092529082015260600161007e565b6000546040516001600160a01b03909116815260200161007e565b6100e96100de366004610418565b600291909155600355565b005b60015460405190815260200161007e565b6100e961010a36600461043a565b600155565b600080808415801561011f575083155b1561013257506000915081905080610411565b60008054906101000a90046001600160a01b03166001600160a01b031663c9eb34bb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610183573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a79190610453565b6101f15760405162461bcd60e51b8152602060048201526016602482015275283934b1b29037baba1037b3103232bb34b0ba34b7b760511b60448201526064015b60405180910390fd5b60008060009054906101000a90046001600160a01b03166001600160a01b03166398d5fdca6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610245573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610269919061047c565b600080546040516365d1a37760e01b815260048101849052602481018a90526044810189905292935090916001600160a01b03909116906365d1a37790606401602060405180830381865afa1580156102c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ea919061047c565b905060015460000361030a57610303620f424082610495565b9450610408565b600080546002546003546040516365d1a37760e01b815260048101879052602481019290925260448201526001600160a01b03909116906365d1a37790606401602060405180830381865afa158015610367573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038b919061047c565b9050806000036103eb5760405162461bcd60e51b815260206004820152602560248201527f4469766973696f6e206279207a65726f3a20746f74616c2076616c7565206973604482015264207a65726f60d81b60648201526084016101e8565b80600154836103fa9190610495565b61040491906104c0565b9550505b86935085925050505b9250925092565b6000806040838503121561042b57600080fd5b50508035926020909101359150565b60006020828403121561044c57600080fd5b5035919050565b60006020828403121561046557600080fd5b8151801515811461047557600080fd5b9392505050565b60006020828403121561048e57600080fd5b5051919050565b80820281158282048414176104ba57634e487b7160e01b600052601160045260246000fd5b92915050565b6000826104dd57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220985fb634f6937d23f068c2e31fa51e61c66af8d0c5176c6acf5860a84852bf2764736f6c634300081a0033";

type TestOracleVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestOracleVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestOracleVault__factory extends ContractFactory {
  constructor(...args: TestOracleVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    oracleHelper: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(oracleHelper, overrides || {});
  }
  override deploy(
    oracleHelper: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(oracleHelper, overrides || {}) as Promise<
      TestOracleVault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestOracleVault__factory {
    return super.connect(runner) as TestOracleVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestOracleVaultInterface {
    return new Interface(_abi) as TestOracleVaultInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestOracleVault {
    return new Contract(address, _abi, runner) as unknown as TestOracleVault;
  }
}
