/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SimpleMockPool,
  SimpleMockPoolInterface,
} from "../../../test/mocks/SimpleMockPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    name: "observe",
    outputs: [
      {
        internalType: "int56[]",
        name: "tickCumulatives",
        type: "int56[]",
      },
      {
        internalType: "uint160[]",
        name: "",
        type: "uint160[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "newSqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "setSqrtPriceX96",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "newTick",
        type: "int24",
      },
    ],
    name: "setTick",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "slot0",
    outputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "uint16",
        name: "observationIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "observationCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "observationCardinalityNext",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "feeProtocol",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516105e53803806105e583398101604081905261002f916100f4565b600180546001600160a01b039586166001600160a01b031991821617825560028054958716959091169490941784556040805160e081018252939095168084529382900b60208401526000948301859052606083018190526080830181905260a0830185905260c09092019190915282546501000001000160c81b600160b81b600160f81b031962ffffff909316600160a01b026001600160b81b0319909216909317171617905561015a565b6001600160a01b03811681146100f157600080fd5b50565b6000806000806080858703121561010a57600080fd5b8451610115816100dc565b6020860151909450610126816100dc565b6040860151909350610137816100dc565b8092505060608501518060020b811461014f57600080fd5b939692955090935050565b61047c806101696000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630dfe1681146100675780633850c7bd14610091578063883bdbfd14610150578063c80b429014610171578063c9c32f2a146101a5578063d21220a7146101d5575b600080fd5b6001546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6040805160e080820183526000546001600160a01b038116808452600160a01b820460020b602080860182905261ffff600160b81b85048116878901819052600160c81b860482166060808a01829052600160d81b88049093166080808b0182905260ff600160e81b8a04811660a0808e01829052600160f01b909b04909116151560c09c8d018190528d51998a52968901979097529a8701929092529185019190915296830196909652918101919091529182019290925201610088565b61016361015e3660046102a3565b6101e6565b60405161008892919061031a565b6101a361017f3660046103a8565b6000805462ffffff909216600160a01b0262ffffff60a01b19909216919091179055565b005b6101a36101b33660046103d2565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b0316610074565b60408051600180825281830190925260609182919060208083019080368337505060005491935061022391429150600160a01b900460020b6103fb565b8260008151811061023657610236610430565b60069290920b6020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905060008160008151811061028257610282610430565b6001600160a01b039092166020928302919091019091015290509250929050565b600080602083850312156102b657600080fd5b823567ffffffffffffffff8111156102cd57600080fd5b8301601f810185136102de57600080fd5b803567ffffffffffffffff8111156102f557600080fd5b8560208260051b840101111561030a57600080fd5b6020919091019590945092505050565b6040808252835190820181905260009060208501906060840190835b8181101561035757835160060b835260209384019390920191600101610336565b50508381036020808601919091528551808352918101925085019060005b8181101561039c5782516001600160a01b0316845260209384019390920191600101610375565b50919695505050505050565b6000602082840312156103ba57600080fd5b81358060020b81146103cb57600080fd5b9392505050565b6000602082840312156103e457600080fd5b81356001600160a01b03811681146103cb57600080fd5b60008260060b8260060b028060060b915080821461042957634e487b7160e01b600052601160045260246000fd5b5092915050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220ed91aafaf302078c6379f3dc13f715d120da9978e10f1f81bfb2c440efa733d764736f6c634300081a0033";

type SimpleMockPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleMockPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleMockPool__factory extends ContractFactory {
  constructor(...args: SimpleMockPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    tokenA: AddressLike,
    tokenB: AddressLike,
    sqrtPriceX96: BigNumberish,
    tick: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      tokenA,
      tokenB,
      sqrtPriceX96,
      tick,
      overrides || {}
    );
  }
  override deploy(
    tokenA: AddressLike,
    tokenB: AddressLike,
    sqrtPriceX96: BigNumberish,
    tick: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      tokenA,
      tokenB,
      sqrtPriceX96,
      tick,
      overrides || {}
    ) as Promise<
      SimpleMockPool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleMockPool__factory {
    return super.connect(runner) as SimpleMockPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleMockPoolInterface {
    return new Interface(_abi) as SimpleMockPoolInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleMockPool {
    return new Contract(address, _abi, runner) as unknown as SimpleMockPool;
  }
}
