/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  Uint256x256Math,
  Uint256x256MathInterface,
} from "../../../../../@arca/joe-v2/libraries/math/Uint256x256Math";

const _abi = [
  {
    inputs: [],
    name: "Uint256x256Math__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "Uint256x256Math__MulShiftOverflow",
    type: "error",
  },
] as const;

const _bytecode =
  "0x608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea26469706673582212205f8c1ca29c8f8288973c591da3974bcdb4f44e727150f53e5cd0c24040b1da6c64736f6c634300081c0033";

type Uint256x256MathConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Uint256x256MathConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Uint256x256Math__factory extends ContractFactory {
  constructor(...args: Uint256x256MathConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Uint256x256Math & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Uint256x256Math__factory {
    return super.connect(runner) as Uint256x256Math__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Uint256x256MathInterface {
    return new Interface(_abi) as Uint256x256MathInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Uint256x256Math {
    return new Contract(address, _abi, runner) as unknown as Uint256x256Math;
  }
}
