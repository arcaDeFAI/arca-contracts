/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  ERC20Upgradeable,
  ERC20UpgradeableInterface,
} from "../../../../../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234601957604051610a6961001f8239610a6990f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806306fdde03146100c2578063095ea7b3146100bd57806318160ddd146100b857806323b872dd146100b3578063313ce567146100ae57806339509351146100a957806370a08231146100a457806395d89b411461009f578063a457c2d71461009a578063a9059cbb146100955763dd62ed3e036100d257610363565b610324565b610308565b6102ed565b6102d2565b6102a2565b610273565b610257565b610202565b6101d4565b610146565b60009103126100d257565b600080fd5b60005b8381106100ea5750506000910152565b81810151838201526020016100da565b61011b61012460209361012e9361010f815190565b80835293849260200190565b958691016100d7565b601f01601f191690565b0190565b6020808252610143929101906100fa565b90565b346100d2576101563660046100c7565b61016d6101616104b4565b60405191829182610132565b0390f35b6001600160a01b031690565b6001600160a01b0381165b036100d257565b9050359061019c8261017d565b565b80610188565b9050359061019c8261019e565b91906040838203126100d2576101439060206101cd828661018f565b94016101a4565b346100d25761016d6101f06101ea3660046101b1565b906104be565b60405191829182901515815260200190565b346100d2576102123660046100c7565b61016d61021d6104df565b6040515b9182918290815260200190565b90916060828403126100d257610143610247848461018f565b9360406101cd826020870161018f565b346100d25761016d6101f061026d36600461022e565b916104e9565b346100d2576102833660046100c7565b61016d61028e610512565b6040519182918260ff909116815260200190565b346100d25761016d6101f06102b83660046101b1565b90610544565b906020828203126100d2576101439161018f565b346100d25761016d61021d6102e83660046102be565b6105a1565b346100d2576102fd3660046100c7565b61016d6101616105bd565b346100d25761016d6101f061031e3660046101b1565b90610621565b346100d25761016d6101f061033a3660046101b1565b90610645565b91906040838203126100d25761014390602061035c828661018f565b940161018f565b346100d25761016d61021d610379366004610340565b90610650565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156103b5575b60208310146103b057565b61037f565b91607f16916103a5565b805460009392916103dc6103d283610395565b8085529360200190565b916001811690811561042e57506001146103f557505050565b6104089192939450600052602060002090565b916000925b81841061041a5750500190565b80548484015260209093019260010161040d565b92949550505060ff1916825215156020020190565b90610143916103bf565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761048557604052565b61044d565b9061019c6104a49261049b60405190565b93848092610443565b0383610463565b6101439061048a565b61014360366104ab565b6104c9919033610756565b600190565b6101439081565b61014390546104ce565b61014360356104d5565b6104c99291906104fa83338361083e565b610983565b61050c6101436101439290565b60ff1690565b61014360126104ff565b634e487b7160e01b600052601160045260246000fd5b9190820180921161053f57565b61051c565b6104c9919061055d33926105588385610650565b610532565b91610756565b61014390610171906001600160a01b031682565b61014390610563565b61014390610577565b9061059390610580565b600052602052604060002090565b6105b8610143916105b0600090565b506033610589565b6104d5565b61014360376104ab565b156105ce57565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608490fd5b6104c9919061055d33926106358385610650565b610641828210156105c7565b0390565b6104c9919033610983565b6101439161066b6105b892610663600090565b506034610589565b610589565b6101716101436101439290565b61014390610670565b1561068d57565b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b156106e557565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b6101436101436101439290565b9061014361014361075292610735565b9055565b6107ed6107e36107dd7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925936107c06107af610791600061067d565b6101716001600160a01b0382166001600160a01b0386161415610686565b6001600160a01b03881614156106de565b6107d8876107d38861066b856034610589565b610742565b610580565b93610580565b9361022160405190565b0390a3565b156107f957565b60405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b906108498183610650565b6000198103610859575b50505050565b61086d9361055d91610641828210156107f2565b38808080610853565b1561087d57565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b156108d757565b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b1561092f57565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b6107ed6107e36107dd7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef936109ed6109dc6109be600061067d565b6101716001600160a01b0382166001600160a01b0386161415610876565b6001600160a01b03881614156108d0565b6107d8610a2087603361066b610a168c610a0a6105b88986610589565b61064182821015610928565b6107d38784610589565b610a2d8961012e836104d5565b9061074256fea2646970667358221220f095ada4ac662f85f1d06c84171372d94c541326247949603939b3f4e1f63b2064736f6c634300081c0033";

type ERC20UpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20UpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Upgradeable__factory extends ContractFactory {
  constructor(...args: ERC20UpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ERC20Upgradeable & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Upgradeable__factory {
    return super.connect(runner) as ERC20Upgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20UpgradeableInterface {
    return new Interface(_abi) as ERC20UpgradeableInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC20Upgradeable {
    return new Contract(address, _abi, runner) as unknown as ERC20Upgradeable;
  }
}
