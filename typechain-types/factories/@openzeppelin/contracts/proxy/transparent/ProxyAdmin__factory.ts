/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  ProxyAdmin,
  ProxyAdminInterface,
} from "../../../../../@openzeppelin/contracts/proxy/transparent/ProxyAdmin";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract ITransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeProxyAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITransparentUpgradeableProxy",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523461002257610011610027565b60405161083c610106823961083c90f35b600080fd5b61002f610031565b565b61002f336100ae565b61004b905b6001600160a01b031690565b90565b61004b905461003a565b61004b9061003f906001600160a01b031682565b61004b90610058565b61004b9061006c565b9061008e61004b6100aa92610075565b82546001600160a01b0319166001600160a01b03919091161790565b9055565b6100d46100ce6100be600061004e565b6100c984600061007e565b610075565b91610075565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06100ff60405190565b600090a356fe6080604052600436101561001257600080fd5b60003560e01c8063204e1c7a14610092578063715018a61461008d5780637eff275e146100885780638da5cb5b146100835780639623609d1461007e57806399a88ec414610079578063f2fde38b146100745763f3b7dead036100b857610317565b6102ff565b6102d2565b6102be565b610199565b610180565b610124565b6100e0565b6001600160a01b031690565b90565b6001600160a01b0381165b036100b857565b600080fd5b905035906100ca826100a6565b565b906020828203126100b8576100a3916100bd565b346100b8576101156100fb6100f63660046100cc565b6103b1565b604051918291826001600160a01b03909116815260200190565b0390f35b60009103126100b857565b346100b857610134366004610119565b61013c610446565b604051005b6001600160a01b0381166100b1565b905035906100ca82610141565b91906040838203126100b8576100a390602061017982866100bd565b9401610150565b346100b85761013c61019336600461015d565b906104e4565b346100b8576101a9366004610119565b6101156100fb6104ee565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176101ec57604052565b6101b4565b906100ca6101fe60405190565b92836101ca565b67ffffffffffffffff81116101ec57602090601f01601f19160190565b0190565b90826000939282370152565b9092919261024761024282610205565b6101f1565b93818552818301116100b8576100ca916020850190610226565b9080601f830112156100b8578160206100a393359101610232565b916060838303126100b85761029182846100bd565b9261029f8360208301610150565b92604082013567ffffffffffffffff81116100b8576100a39201610261565b61013c6102cc36600461027c565b916105de565b346100b85761013c6102e536600461015d565b9061062d565b906020828203126100b8576100a391610150565b346100b85761013c6103123660046102eb565b6106cd565b346100b8576101156100fb61032d3660046100cc565b6106d6565b6100a390610097906001600160a01b031682565b6100a390610332565b6100a390610346565b9061036561024283610205565b918252565b3d15610384576103793d610358565b903d6000602084013e565b606090565b156100b857565b905051906100ca82610141565b906020828203126100b8576100a391610390565b6104096000806103cc6100a3946103c6600090565b5061034f565b604051635c60da1b60e01b815280600481015b03915afa6103f46103ee61036a565b91610389565b60206103fe825190565b81830101910161039d565b61034f565b610416610752565b6100ca610434565b6100976100a36100a39290565b6100a39061041e565b6100ca610441600061042b565b6107ac565b6100ca61040e565b906100ca9161045b610752565b61046c565b6040513d6000823e3d90fd5b6104759061034f565b803b156100b8576104b660009291839261048e60405190565b94859384928391906308f2839760e41b5b83526001600160a01b031660048301526024820190565b03925af180156104df576104c75750565b6100ca9060006104d781836101ca565b810190610119565b610460565b906100ca9161044e565b6000546001600160a01b031690565b906100ca929161050b610752565b61058a565b60005b8381106105235750506000910152565b8181015183820152602001610513565b61055461055d60209361022293610548815190565b80835293849260200190565b95869101610510565b601f01601f191690565b6001600160a01b0390911681526100a39160408201916020818403910152610533565b6105939061034f565b90634f1ef28691803b156100b8576105c06000936105cb6105b360405190565b9687958694859460e01b90565b845260048401610567565b039134905af180156104df576104c75750565b906100ca92916104fd565b906100ca916105f6610752565b6105ff9061034f565b803b156100b8576104b660009291839261061860405190565b9485938492839190631b2ce7f360e11b61049f565b906100ca916105e9565b6100ca90610643610752565b6106a8565b1561064f57565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015280608481015b0390fd5b6100ca906104416106bc610097600061042b565b6001600160a01b0383161415610648565b6100ca90610637565b6104096000806106eb6100a3946103c6600090565b6040516303e1469160e61b815280600481016103df565b1561070957565b60405162461bcd60e51b8152806106a4600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6100ca61075d6104ee565b61077661076933610097565b916001600160a01b031690565b14610702565b9061078c6100a36107a89261034f565b82546001600160a01b0319166001600160a01b03919091161790565b9055565b6107d56107cf6107c46000546001600160a01b031690565b61040984600061077c565b9161034f565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e061080060405190565b600090a356fea264697066735822122014dc8d89119d22e614171dd8fd26e68af43fc68102f3575ebe3290ac1baef30664736f6c634300081c0033";

type ProxyAdminConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxyAdminConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProxyAdmin__factory extends ContractFactory {
  constructor(...args: ProxyAdminConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ProxyAdmin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ProxyAdmin__factory {
    return super.connect(runner) as ProxyAdmin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyAdminInterface {
    return new Interface(_abi) as ProxyAdminInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ProxyAdmin {
    return new Contract(address, _abi, runner) as unknown as ProxyAdmin;
  }
}
