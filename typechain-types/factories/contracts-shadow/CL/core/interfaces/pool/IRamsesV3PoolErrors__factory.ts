/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IRamsesV3PoolErrors,
  IRamsesV3PoolErrorsInterface,
} from "../../../../../../contracts-shadow/CL/core/interfaces/pool/IRamsesV3PoolErrors";

const _abi = [
  {
    inputs: [],
    name: "AI",
    type: "error",
  },
  {
    inputs: [],
    name: "AS",
    type: "error",
  },
  {
    inputs: [],
    name: "F0",
    type: "error",
  },
  {
    inputs: [],
    name: "F1",
    type: "error",
  },
  {
    inputs: [],
    name: "IIA",
    type: "error",
  },
  {
    inputs: [],
    name: "L",
    type: "error",
  },
  {
    inputs: [],
    name: "LOK",
    type: "error",
  },
  {
    inputs: [],
    name: "M0",
    type: "error",
  },
  {
    inputs: [],
    name: "M1",
    type: "error",
  },
  {
    inputs: [],
    name: "SPL",
    type: "error",
  },
  {
    inputs: [],
    name: "TLM",
    type: "error",
  },
  {
    inputs: [],
    name: "TLU",
    type: "error",
  },
  {
    inputs: [],
    name: "TUM",
    type: "error",
  },
] as const;

export class IRamsesV3PoolErrors__factory {
  static readonly abi = _abi;
  static createInterface(): IRamsesV3PoolErrorsInterface {
    return new Interface(_abi) as IRamsesV3PoolErrorsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IRamsesV3PoolErrors {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IRamsesV3PoolErrors;
  }
}
