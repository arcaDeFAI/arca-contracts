/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IPeripheryErrors,
  IPeripheryErrorsInterface,
} from "../../../../../contracts-shadow/CL/periphery/interfaces/IPeripheryErrors";

const _abi = [
  {
    inputs: [],
    name: "CheckSlippage",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "InvalidTokenId",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCleared",
    type: "error",
  },
] as const;

export class IPeripheryErrors__factory {
  static readonly abi = _abi;
  static createInterface(): IPeripheryErrorsInterface {
    return new Interface(_abi) as IPeripheryErrorsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IPeripheryErrors {
    return new Contract(address, _abi, runner) as unknown as IPeripheryErrors;
  }
}
