/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ShadowPriceHelperWrapper,
  ShadowPriceHelperWrapperInterface,
} from "../../../contracts-shadow/src/ShadowPriceHelperWrapper";

const _abi = [
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract IRamsesV3Pool",
        name: "pool",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isTokenX",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "twapInterval",
        type: "uint32",
      },
      {
        internalType: "uint8",
        name: "decimalsX",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "decimalsY",
        type: "uint8",
      },
    ],
    name: "getOraclePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRamsesV3Pool",
        name: "pool",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isTokenX",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "decimalsX",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "decimalsY",
        type: "uint8",
      },
    ],
    name: "getPoolSpotPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRamsesV3Pool",
        name: "pool",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isTokenX",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "twapInterval",
        type: "uint32",
      },
      {
        internalType: "uint8",
        name: "decimalsX",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "decimalsY",
        type: "uint8",
      },
    ],
    name: "getPoolTWAPPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610e2c8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063325e414914610046578063825fd6621461006b5780638576de101461007e575b600080fd5b61005961005436600461088c565b610091565b60405190815260200160405180910390f35b61005961007936600461088c565b610141565b61005961008c366004610906565b610150565b6040516346b2bbc360e01b81526001600160a01b0386166004820152841515602482015263ffffffff8416604482015260ff80841660648301528216608482015260009073__$e67ebb1140e1d2c9349fff613462444575$__906346b2bbc39060a401602060405180830381865af4158015610111573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101359190610962565b90505b95945050505050565b60006101358686868686610169565b600061015e8585858561037a565b90505b949350505050565b6040805160028082526060820183526000928392919060208301908036833701905050905084816000815181106101a2576101a2610991565b602002602001019063ffffffff16908163ffffffff16815250506000816001815181106101d1576101d1610991565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526000906001600160a01b0389169063883bdbfd906102159085906004016109a7565b600060405180830381865afa158015610232573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261025a9190810190610abb565b50905060008663ffffffff168260008151811061027957610279610991565b60200260200101518360018151811061029457610294610991565b60200260200101516102a69190610ba4565b6102b09190610bed565b905060006102bd82610481565b90506ec097ce7bc90715b34b9f100000000060006102f26102e76001600160a01b03851680610c39565b83600160c01b6107a4565b90508a1561031c5761030f816103098b600a610d37565b846107a4565b9650505050505050610138565b60006103338261032d8c600a610d37565b856107a4565b90508060000361034d576000975050505050505050610138565b61036c61035b8a600a610d37565b6103668c600a610d37565b836107a4565b975050505050505050610138565b600080856001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156103bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103df9190610d5d565b509495506ec097ce7bc90715b34b9f100000000094506000935061041492506102e79150506001600160a01b03851680610c39565b905086156104355761042b8161030988600a610d37565b9350505050610161565b60006104468261032d89600a610d37565b90508060000361045d576000945050505050610161565b61047661046b87600a610d37565b61036689600a610d37565b945050505050610161565b60008060008360020b12610498578260020b6104a0565b8260020b6000035b9050620d89e88111156104c6576040516315e4079d60e11b815260040160405180910390fd5b6000816001166000036104dd57600160801b6104ef565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615610523576ffff97272373d413259a46990580e213a0260801c5b6004821615610542576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615610561576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615610580576fffcb9843d60f6159c9db58835c9266440260801c5b602082161561059f576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156105be576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156105dd576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156105fd576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561061d576ff987a7253ac413176f2b074cf7815e540260801c5b61040082161561063d576ff3392b0822b70005940c7a398e4b70f30260801c5b61080082161561065d576fe7159475a2c29b7443b29c7fa6e889d90260801c5b61100082161561067d576fd097f3bdfd2022b8845ad8f792aa58250260801c5b61200082161561069d576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156106bd576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156106dd576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156106fe576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561071e576e5d6af8dedb81196699c329225ee6040260801c5b6204000082161561073d576d2216e584f5fa1ea926041bedfe980260801c5b6208000082161561075a576b048a170391f7dc42444e8fa20260801c5b60008460020b131561077b57806000198161077757610777610bd7565b0490505b64010000000081061561078f576001610792565b60005b60ff16602082901c0192505050919050565b60008080600019858709858702925082811083820303915050806000036107dd57600084116107d257600080fd5b508290049050610850565b8084116107e957600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b6001600160a01b038116811461086c57600080fd5b50565b801515811461086c57600080fd5b60ff8116811461086c57600080fd5b600080600080600060a086880312156108a457600080fd5b85356108af81610857565b945060208601356108bf8161086f565b9350604086013563ffffffff811681146108d857600080fd5b925060608601356108e88161087d565b915060808601356108f88161087d565b809150509295509295909350565b6000806000806080858703121561091c57600080fd5b843561092781610857565b935060208501356109378161086f565b925060408501356109478161087d565b915060608501356109578161087d565b939692955090935050565b60006020828403121561097457600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b602080825282518282018190526000918401906040840190835b818110156109e557835163ffffffff168352602093840193909201916001016109c1565b509095945050505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610a1957610a1961097b565b604052919050565b600067ffffffffffffffff821115610a3b57610a3b61097b565b5060051b60200190565b600082601f830112610a5657600080fd5b8151610a69610a6482610a21565b6109f0565b8082825260208201915060208360051b860101925085831115610a8b57600080fd5b602085015b83811015610ab1578051610aa381610857565b835260209283019201610a90565b5095945050505050565b60008060408385031215610ace57600080fd5b825167ffffffffffffffff811115610ae557600080fd5b8301601f81018513610af657600080fd5b8051610b04610a6482610a21565b8082825260208201915060208360051b850101925087831115610b2657600080fd5b6020840193505b82841015610b575783518060060b8114610b4657600080fd5b825260209384019390910190610b2d565b80955050505050602083015167ffffffffffffffff811115610b7857600080fd5b610b8485828601610a45565b9150509250929050565b634e487b7160e01b600052601160045260246000fd5b600682810b9082900b03667fffffffffffff198112667fffffffffffff82131715610bd157610bd1610b8e565b92915050565b634e487b7160e01b600052601260045260246000fd5b60008160060b8360060b80610c1257634e487b7160e01b600052601260045260246000fd5b667fffffffffffff19821460001982141615610c3057610c30610b8e565b90059392505050565b8082028115828204841417610bd157610bd1610b8e565b6001815b6001841115610c8b57808504811115610c6f57610c6f610b8e565b6001841615610c7d57908102905b60019390931c928002610c54565b935093915050565b600082610ca257506001610bd1565b81610caf57506000610bd1565b8160018114610cc55760028114610ccf57610ceb565b6001915050610bd1565b60ff841115610ce057610ce0610b8e565b50506001821b610bd1565b5060208310610133831016604e8410600b8410161715610d0e575081810a610bd1565b610d1b6000198484610c50565b8060001904821115610d2f57610d2f610b8e565b029392505050565b600061085060ff841683610c93565b805161ffff81168114610d5857600080fd5b919050565b600080600080600080600060e0888a031215610d7857600080fd5b8751610d8381610857565b8097505060208801518060020b8114610d9b57600080fd5b9550610da960408901610d46565b9450610db760608901610d46565b9350610dc560808901610d46565b925060a0880151610dd58161087d565b60c0890151909250610de68161086f565b809150509295989194975092955056fea264697066735822122026f47813bf3494a344dadcc0c6c9a271ced78e8c9dd6aac86820f2daeaa6a21a64736f6c634300081a0033";

type ShadowPriceHelperWrapperConstructorParams =
  | [
      linkLibraryAddresses: ShadowPriceHelperWrapperLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShadowPriceHelperWrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ShadowPriceHelperWrapper__factory extends ContractFactory {
  constructor(...args: ShadowPriceHelperWrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ShadowPriceHelperWrapper__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ShadowPriceHelperWrapperLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e67ebb1140e1d2c9349fff613462444575\\$__", "g"),
      linkLibraryAddresses[
        "contracts-shadow/src/libraries/ShadowPriceHelper.sol:ShadowPriceHelper"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ShadowPriceHelperWrapper & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ShadowPriceHelperWrapper__factory {
    return super.connect(runner) as ShadowPriceHelperWrapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShadowPriceHelperWrapperInterface {
    return new Interface(_abi) as ShadowPriceHelperWrapperInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ShadowPriceHelperWrapper {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ShadowPriceHelperWrapper;
  }
}

export interface ShadowPriceHelperWrapperLibraryAddresses {
  ["contracts-shadow/src/libraries/ShadowPriceHelper.sol:ShadowPriceHelper"]: string;
}
