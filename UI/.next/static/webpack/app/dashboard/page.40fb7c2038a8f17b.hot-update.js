"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./hooks/useDashboardData.ts":
/*!***********************************!*\
  !*** ./hooks/useDashboardData.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useDashboardData: function() { return /* binding */ useDashboardData; }\n/* harmony export */ });\n/* harmony import */ var wagmi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wagmi */ \"(app-pages-browser)/./node_modules/wagmi/dist/esm/hooks/useReadContract.js\");\n/* harmony import */ var wagmi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! wagmi */ \"(app-pages-browser)/./node_modules/wagmi/dist/esm/hooks/useWriteContract.js\");\n/* harmony import */ var _abi_MetroVault_abi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/abi/MetroVault.abi */ \"(app-pages-browser)/./abi/MetroVault.abi.ts\");\n/* __next_internal_client_entry_do_not_use__ useDashboardData auto */ \n\nfunction useDashboardData(config, userAddress) {\n    // Test with totalSupply first - simple function that should always work\n    const { data: totalSupply, isLoading: totalSupplyLoading, error: totalSupplyError } = (0,wagmi__WEBPACK_IMPORTED_MODULE_1__.useReadContract)({\n        address: config.vaultAddress,\n        abi: _abi_MetroVault_abi__WEBPACK_IMPORTED_MODULE_0__.METRO_VAULT_ABI,\n        functionName: \"totalSupply\",\n        query: {\n            enabled: !!config.vaultAddress\n        }\n    });\n    // Simple contract calls - exactly like VaultCard\n    const { data: userShares } = (0,wagmi__WEBPACK_IMPORTED_MODULE_1__.useReadContract)({\n        address: config.vaultAddress,\n        abi: _abi_MetroVault_abi__WEBPACK_IMPORTED_MODULE_0__.METRO_VAULT_ABI,\n        functionName: \"balanceOf\",\n        args: userAddress ? [\n            userAddress\n        ] : undefined,\n        query: {\n            enabled: !!userAddress && !!config.vaultAddress\n        }\n    });\n    const { data: currentRound, isLoading: roundLoading, error: roundError } = (0,wagmi__WEBPACK_IMPORTED_MODULE_1__.useReadContract)({\n        address: config.vaultAddress,\n        abi: _abi_MetroVault_abi__WEBPACK_IMPORTED_MODULE_0__.METRO_VAULT_ABI,\n        functionName: \"getCurrentRound\",\n        query: {\n            enabled: !!config.vaultAddress\n        }\n    });\n    const { data: pendingRewards } = (0,wagmi__WEBPACK_IMPORTED_MODULE_1__.useReadContract)({\n        address: config.vaultAddress,\n        abi: _abi_MetroVault_abi__WEBPACK_IMPORTED_MODULE_0__.METRO_VAULT_ABI,\n        functionName: \"getPendingRewards\",\n        args: userAddress ? [\n            userAddress\n        ] : undefined,\n        query: {\n            enabled: !!userAddress && !!config.vaultAddress\n        }\n    });\n    // Get queued withdrawal (needs round and user address)\n    const { data: queuedWithdrawal } = (0,wagmi__WEBPACK_IMPORTED_MODULE_1__.useReadContract)({\n        address: config.vaultAddress,\n        abi: _abi_MetroVault_abi__WEBPACK_IMPORTED_MODULE_0__.METRO_VAULT_ABI,\n        functionName: \"getQueuedWithdrawal\",\n        args: currentRound && userAddress ? [\n            currentRound,\n            userAddress\n        ] : undefined,\n        query: {\n            enabled: !!userAddress && !!config.vaultAddress && !!currentRound\n        }\n    });\n    // Get redeemable amounts (needs round and user address)\n    const { data: redeemableAmounts } = (0,wagmi__WEBPACK_IMPORTED_MODULE_1__.useReadContract)({\n        address: config.vaultAddress,\n        abi: _abi_MetroVault_abi__WEBPACK_IMPORTED_MODULE_0__.METRO_VAULT_ABI,\n        functionName: \"getRedeemableAmounts\",\n        args: currentRound && userAddress ? [\n            currentRound,\n            userAddress\n        ] : undefined,\n        query: {\n            enabled: !!userAddress && !!config.vaultAddress && !!currentRound\n        }\n    });\n    console.log(\"\\uD83D\\uDD0D Dashboard \".concat(config.name, \":\"), {\n        vaultAddress: config.vaultAddress,\n        userAddress,\n        totalSupply_RAW: totalSupply,\n        totalSupply_STRING: totalSupply === null || totalSupply === void 0 ? void 0 : totalSupply.toString(),\n        totalSupply_LOADING: totalSupplyLoading,\n        totalSupply_ERROR: totalSupplyError,\n        userShares_RAW: userShares,\n        userShares_STRING: userShares === null || userShares === void 0 ? void 0 : userShares.toString(),\n        currentRound_RAW: currentRound,\n        currentRound_STRING: currentRound === null || currentRound === void 0 ? void 0 : currentRound.toString(),\n        currentRound_LOADING: roundLoading,\n        currentRound_ERROR: roundError,\n        pendingRewards_RAW: pendingRewards,\n        pendingRewards_LENGTH: pendingRewards === null || pendingRewards === void 0 ? void 0 : pendingRewards.length,\n        queuedWithdrawal_RAW: queuedWithdrawal,\n        queuedWithdrawal_STRING: queuedWithdrawal === null || queuedWithdrawal === void 0 ? void 0 : queuedWithdrawal.toString(),\n        redeemableAmounts_RAW: redeemableAmounts,\n        enabled_userShares: !!userAddress && !!config.vaultAddress,\n        enabled_currentRound: !!config.vaultAddress,\n        enabled_pendingRewards: !!userAddress && !!config.vaultAddress\n    });\n    // Write contract hooks for transactions\n    const { writeContract: claimRewards, isPending: isClaimingRewards } = (0,wagmi__WEBPACK_IMPORTED_MODULE_2__.useWriteContract)();\n    const { writeContract: cancelWithdrawal, isPending: isCancelingWithdrawal } = (0,wagmi__WEBPACK_IMPORTED_MODULE_2__.useWriteContract)();\n    const { writeContract: redeemWithdrawal, isPending: isRedeemingWithdrawal } = (0,wagmi__WEBPACK_IMPORTED_MODULE_2__.useWriteContract)();\n    // Helper functions for contract interactions\n    const handleClaimRewards = ()=>{\n        if (!userAddress) return;\n        claimRewards({\n            address: config.vaultAddress,\n            abi: _abi_MetroVault_abi__WEBPACK_IMPORTED_MODULE_0__.METRO_VAULT_ABI,\n            functionName: \"claim\",\n            args: []\n        });\n    };\n    const handleCancelWithdrawal = (shares)=>{\n        if (!userAddress) return;\n        cancelWithdrawal({\n            address: config.vaultAddress,\n            abi: _abi_MetroVault_abi__WEBPACK_IMPORTED_MODULE_0__.METRO_VAULT_ABI,\n            functionName: \"cancelQueuedWithdrawal\",\n            args: [\n                shares\n            ]\n        });\n    };\n    const handleRedeemWithdrawal = (round)=>{\n        if (!userAddress) return;\n        redeemWithdrawal({\n            address: config.vaultAddress,\n            abi: _abi_MetroVault_abi__WEBPACK_IMPORTED_MODULE_0__.METRO_VAULT_ABI,\n            functionName: \"redeemQueuedWithdrawal\",\n            args: [\n                round,\n                userAddress\n            ]\n        });\n    };\n    return {\n        userShares,\n        currentRound,\n        pendingRewards,\n        queuedWithdrawal,\n        redeemableAmounts,\n        // Actions\n        handleClaimRewards,\n        handleCancelWithdrawal,\n        handleRedeemWithdrawal,\n        // Loading states\n        isClaimingRewards,\n        isCancelingWithdrawal,\n        isRedeemingWithdrawal\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useDashboardData.ts\n"));

/***/ })

});