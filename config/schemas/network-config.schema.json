{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Arca Multi-Vault Network Configuration Schema",
  "description": "Schema for validating Arca network configuration files with multi-vault support",
  "type": "object",
  "required": ["name", "chainId", "sharedContracts", "vaults"],
  "properties": {
    "name": {
      "type": "string",
      "description": "Network name identifier"
    },
    "chainId": {
      "type": "integer",
      "description": "Ethereum chain ID"
    },
    "rpcUrl": {
      "type": "string",
      "format": "uri",
      "description": "Network RPC endpoint URL"
    },
    "blockExplorer": {
      "type": "string",
      "format": "uri",
      "description": "Block explorer URL"
    },
    "sharedContracts": {
      "type": "object",
      "description": "Contracts shared across all vaults",
      "required": ["metroToken", "lbRouter", "lbFactory"],
      "properties": {
        "metroToken": {
          "type": "string",
          "description": "METRO token address or DEPLOY_MOCK"
        },
        "lbRouter": {
          "type": "string",
          "description": "LB Router address or DEPLOY_MOCK"
        },
        "lbFactory": {
          "type": "string",
          "description": "LB Factory address or DEPLOY_MOCK"
        }
      }
    },
    "testAccounts": {
      "type": "object",
      "description": "Test account funding configuration",
      "properties": {
        "fundingAmount": {
          "type": "string",
          "description": "Amount of each token to fund test accounts with"
        },
        "count": {
          "type": "integer",
          "minimum": 1,
          "description": "Number of test accounts to fund"
        }
      }
    },
    "vaults": {
      "type": "array",
      "description": "Array of vault configurations",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": ["id", "enabled", "tokens", "lbPair", "deployment"],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[a-z0-9-]+$",
            "description": "Unique vault identifier (lowercase, alphanumeric, hyphens only)"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether this vault should be deployed"
          },
          "tokens": {
            "type": "object",
            "required": ["tokenX", "tokenY"],
            "properties": {
              "tokenX": {
                "$ref": "#/definitions/token"
              },
              "tokenY": {
                "$ref": "#/definitions/token"
              }
            }
          },
          "lbPair": {
            "type": "object",
            "required": ["address", "binStep", "activeId"],
            "properties": {
              "address": {
                "type": "string",
                "description": "LB Pair address or DEPLOY_MOCK"
              },
              "deployMock": {
                "type": "boolean",
                "description": "Whether to deploy a mock LB pair"
              },
              "binStep": {
                "type": "integer",
                "minimum": 1,
                "description": "Bin step for the LB pair"
              },
              "activeId": {
                "type": "integer",
                "description": "Initial active bin ID"
              }
            }
          },
          "deployment": {
            "type": "object",
            "required": ["vaultName", "vaultSymbol", "amountXMin", "amountYMin", "idSlippage", "feeRecipient"],
            "properties": {
              "vaultName": {
                "type": "string",
                "description": "Human-readable vault name"
              },
              "vaultSymbol": {
                "type": "string",
                "description": "Vault token symbol"
              },
              "amountXMin": {
                "type": "string",
                "pattern": "^[0-9]+$",
                "description": "Minimum amount of token X for initial liquidity"
              },
              "amountYMin": {
                "type": "string",
                "pattern": "^[0-9]+$",
                "description": "Minimum amount of token Y for initial liquidity"
              },
              "idSlippage": {
                "type": "string",
                "pattern": "^[0-9]+$",
                "description": "Allowed slippage for bin ID"
              },
              "feeRecipient": {
                "type": "string",
                "pattern": "^0x[a-fA-F0-9]{40}$",
                "description": "Address to receive protocol fees"
              }
            }
          }
        }
      }
    },
    "gasSettings": {
      "type": "object",
      "properties": {
        "gasPrice": {
          "oneOf": [
            { "type": "string", "enum": ["auto"] },
            { "type": "string", "pattern": "^[0-9]+$" }
          ]
        },
        "gasLimit": {
          "type": "integer"
        }
      }
    },
    "security": {
      "type": "object",
      "properties": {
        "requireMultisig": {
          "type": "boolean"
        },
        "timelockDelay": {
          "type": "integer"
        },
        "upgradeDelay": {
          "type": "integer"
        }
      }
    },
    "testnet": {
      "type": "object",
      "properties": {
        "faucetUrl": {
          "type": "string",
          "format": "uri"
        },
        "explorerUrl": {
          "type": "string",
          "format": "uri"
        },
        "documentation": {
          "type": "object"
        }
      }
    }
  },
  "definitions": {
    "token": {
      "type": "object",
      "required": ["address", "symbol", "name", "decimals"],
      "properties": {
        "address": {
          "type": "string",
          "description": "Token contract address or DEPLOY_MOCK"
        },
        "symbol": {
          "type": "string",
          "description": "Token symbol"
        },
        "name": {
          "type": "string",
          "description": "Token name"
        },
        "decimals": {
          "type": "integer",
          "minimum": 0,
          "maximum": 18,
          "description": "Token decimals"
        },
        "deployMock": {
          "type": "boolean",
          "description": "Whether to deploy a mock token"
        }
      }
    }
  }
}